import java.util.ArrayList;

public class Grid<T> {// T remains unspecified so later code can specify their own type(i.e string, int, etc)
	private final ArrayList<ArrayList<T>> grid;//stores the grid and its elements
	public final int sideLength;//the lenth of the grid (the number of values in each row and column)

	public Grid(int sideLength, T defaultVal) {
		this.sideLength = sideLength;
		this.grid = new ArrayList<ArrayList<T>>(sideLength);
		for (int i = 0; i < sideLength; i++) { //The # that will be used for the side length
			grid.add(new ArrayList<>(sideLength));
			for (int j = 0; j < sideLength; j++) {
				grid.get(i).add(defaultVal);//Number in the place
			}
		}
	}

	public T get(int row, int col) { //row and col are variables
		return grid.get(row).get(col);//return the values in row and col
	}

	public void set(int row, int col, T val) {
		grid.get(row).set(col, val);
	}

	@Override
	public String toString() {
		String str = "";
		for (ArrayList<T> row : grid) {
			for (T element : row) {
				str += element + " ";
			}
			str += "\n";
		}
		return str;
        
	}
}
--------------------------------------------------------------------
public class Main {
    public static void main(String[] args) {
        Grid<Integer> grid = new Grid<>(5, 0);
        grid.set(0, 0, 4);
        grid.set(0, 1, 4);
        grid.set(0, 2, 2);
        grid.set(0, 3, 7);
        grid.set(0, 4, 3);

        grid.set(1, 0, 5);
        grid.set(1, 1, 2);
        grid.set(1, 2, 6);
        grid.set(1, 3, 5);
        grid.set(1, 4, 6);

        grid.set(2, 0, 5);
        grid.set(2, 1, 1);
        grid.set(2, 2, 2);
        grid.set(2, 3, 7);
        grid.set(2, 4, 9);

        grid.set(3, 0, 7);
        grid.set(3, 1, 2);
        grid.set(3, 2, 3);
        grid.set(3, 3, 4);
        grid.set(3, 4, 1);

        grid.set(4,0,0);
        grid.set(4,1,7);
        grid.set(4,2,3);
        grid.set(4,3,4);
        grid.set(4,4,5);



System.out.println(grid);
       int gridlength=grid.sideLength;
       for(int x=0; x<gridlength;x++){
    grid.get(x,x);
    System.out.println(grid.get(x,x));

       }

    }

  
    
}
