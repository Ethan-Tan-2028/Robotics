

import java.util.ArrayList;

public class Grid<T> {
	private final ArrayList<ArrayList<T>> grid;
	public final int sideLength;
    private static int maxSideLength = 0;

	public Grid(int sideLength, T defaultVal) {
		this.sideLength = sideLength;
		this.grid = new ArrayList<ArrayList<T>>(sideLength);
		for (int i = 0; i < sideLength; i++) { //The # that will be used for the side length
			grid.add(new ArrayList<>(sideLength));
			for (int j = 0; j < sideLength; j++) {
				grid.get(i).add(defaultVal);//Number in the place
			}
		}
		if (sideLength > maxSideLength) {
			maxSideLength = sideLength;
		}
	
	}

	public T get(int row, int col) {
		return grid.get(row).get(col);
	}

	public void set(int row, int col, T val) {
		grid.get(row).set(col, val);
	}
	public static int maxSideLength(int sideLength, int val){
		
			return val;

	}
    public static int getMaxSideLength() {
        return maxSideLength;
    }

	

	@Override
	public String toString() {
		String str = "";
		for (ArrayList<T> row : grid) {
			for (T element : row) {
				str += element + " ";
			}

			str += "\n";
		}
		return str;
	}
}
-------------------------------------------------------------------------
public class Main {
    public static void main(String[] args) {
      Grid<Integer> a = new Grid<>(4, 0);
      Grid<Integer> b = new Grid<>(6, 0);
      Grid<Integer> c = new Grid<>(7, 0);

  System.out.println(Grid.getMaxSideLength());

     
    }

}
