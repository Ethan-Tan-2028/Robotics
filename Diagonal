import java.util.ArrayList;

public class Main {
    public static void main(String[] args) {
        Grid<Integer> grid = new Grid<>(3, 0);

        grid.set(0, 0, 1); 
        grid.set(1, 1, 2); 
        grid.set(2, 2, 3); 

        Main mainInstance = new Main();

        ArrayList<Integer> diagonal = mainInstance.getDiagonal(grid);
        
        System.out.println(diagonal); 
    }

    public <T> ArrayList<T> getDiagonal(Grid<T> grid) {
        ArrayList<T> diagonal = new ArrayList<>();
        
        for (int x = 0; x < grid.sideLength; x++) {
            diagonal.add(grid.get(x, x)); 
        }
        
        return diagonal;
    }
}
-------------------------------------------------------------------------------------
class Grid<T> {
    private T[][] data;
    public int sideLength;

    // Constructor for the grid
    public Grid(int sideLength, T defaultValue) {
        this.sideLength = sideLength;
        this.data = (T[][]) new Object[sideLength][sideLength];
        
        // Initialize grid with the default value
        for (int i = 0; i < sideLength; i++) {
            for (int j = 0; j < sideLength; j++) {
                data[i][j] = defaultValue;
            }
        }
    }

    // Method to set values in the grid
    public void set(int row, int col, T value) {
        data[row][col] = value;
    }

    // Method to get values from the grid
    public T get(int row, int col) {
        return data[row][col];
    }

	@Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < sideLength; i++) {
            for (int j = 0; j < sideLength; j++) {
                sb.append(data[i][j]).append("\t");
            }
            sb.append("\n");
        }
        return sb.toString();
        
	}
}
