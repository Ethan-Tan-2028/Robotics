import java.util.ArrayList;

public class Main {
    public static void main(String[] args) {
        Grid<Integer> grid = new Grid<>(3, 0);

        grid.set(0, 0, 1); 
        grid.set(1, 1, 2); 
        grid.set(2, 2, 3); 

        Main mainInstance = new Main();

        ArrayList<Integer> diagonal = mainInstance.getDiagonal(grid);
        
        System.out.println(diagonal); 
    }

    public <T> ArrayList<T> getDiagonal(Grid<T> grid) {
        ArrayList<T> diagonal = new ArrayList<>();
        
        for (int x = 0; x < grid.sideLength; x++) {
            diagonal.add(grid.get(x, x)); 
        }
        
        return diagonal;
    }
}
-------------------------------------------------------------------------------------
import java.util.ArrayList;

public class Grid<T> {
	private final ArrayList<ArrayList<T>> grid;
	public final int sideLength;

	public Grid(int sideLength, T defaultVal) {
		this.sideLength = sideLength;
		this.grid = new ArrayList<ArrayList<T>>(sideLength);
		for (int i = 0; i < sideLength; i++) {
			grid.add(new ArrayList<>(sideLength));
			for (int j = 0; j < sideLength; j++) {
				grid.get(i).add(defaultVal);
			}
		}
	}

	public T get(int row, int col) {
		return grid.get(row).get(col);
	}

	public void set(int row, int col, T val) {
		grid.get(row).set(col, val);
	}


	@Override
	public String toString() {
		String str = "";
		for (ArrayList<T> row : grid) {
			for (T element : row) {
				str += element + " ";
			}
			str += "\n";
		}
		return str;
	}
}
